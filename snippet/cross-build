#!/bin/bash

ZLIB_BUILD() {
    GET_ZLIB
    mkdir -p $BUILD_DIR/zlib && cd $BUILD_DIR/zlib
    curl -Ls -o - "$ZLIB" | tar zxf - --strip-components=1
    ./configure \
        --prefix=$PREFIX \
        --static
    make -j$(nproc) install
}

EXPAT_BUILD() {
    GET_EXPAT
    mkdir -p $BUILD_DIR/expat && cd $BUILD_DIR/expat
    curl -Ls -o - "$EXPAT" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --without-examples \
        --without-tests \
        --without-docbook
    make -j$(nproc) install
}

C_ARES_BUILD() {
    GET_C_ARES
    mkdir -p $BUILD_DIR/c-ares && cd $BUILD_DIR/c-ares
    curl -Ls -o - "$C_ARES" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-tests
    make -j$(nproc) install
}

OPENSSL_BUILD() {
    GET_OPENSSL
    mkdir -p $BUILD_DIR/openssl && cd $BUILD_DIR/openssl
    curl -Ls -o - "$OPENSSL" | tar zxf - --strip-components=1
    ./Configure \
        -static \
        --prefix=$PREFIX \
        $OPENSSL_ARCH \
        --openssldir=/etc/ssl
    make -j$(nproc) install_sw
}

LIBRESSL_BUILD() {
    GET_LIBRESSL
    mkdir -p $BUILD_DIR/libressl && cd $BUILD_DIR/libressl
    curl -Ls -o - "$LIBRESSL" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared
    make -j$(nproc) install_sw
}

SQLITE3_BUILD() {
    GET_SQLITE3
    mkdir -p $BUILD_DIR/sqlite3 && cd $BUILD_DIR/sqlite3
    curl -Ls -o - "$SQLITE3" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-dynamic-extensions
    make -j$(nproc) install
}

LIBSSH2_BUILD() {
    GET_LIBSSH2
    mkdir -p $BUILD_DIR/libssh2 && cd $BUILD_DIR/libssh2
    curl -Ls -o - "$LIBSSH2" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-examples-build
    make -j$(nproc) install
}

LIBGMP_BUILD() {
    GET_LIBGMP
    mkdir -p $BUILD_DIR/libgmp && cd $BUILD_DIR/libgmp
    curl -Ls -o - "$LIBGMP" | tar Jxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-cxx \
        --enable-fat \
        CFLAGS='-mtune=generic -O2 -g0'
    make -j$(nproc) install
}

ARIA2_BUILD() {
    ARIA2_CODE_GET
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=${ARIA2_PREFIX:-'/usr/loacl'} \
        --without-gnutls \
        --without-libgmp \
        --without-libxml2 \
        --without-libgcrypt \
        --without-libnettle \
        --with-libz \
        --with-libcares \
        --with-libexpat \
        --with-openssl \
        --with-libssh2 \
        --with-sqlite3 \
        --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt' \
        --disable-shared \
        ARIA2_STATIC=yes
    make -j$(nproc)
}

ARIA2_BUILD_MINGW() {
    ARIA2_CODE_GET
    ./configure \
        --host=$HOST \
        --prefix=${ARIA2_PREFIX:-'/usr/loacl'} \
        --disable-nls \
        --without-gnutls \
        --without-openssl \
        --without-libxml2 \
        --without-libgcrypt \
        --without-libnettle \
        --with-libz \
        --with-libcares \
        --with-libexpat \
        --with-libgmp \
        --with-libssh2 \
        --with-sqlite3 \
        --disable-shared \
        ARIA2_STATIC=yes \
        CPPFLAGS="-I$PREFIX/include" \
        LDFLAGS="-L$PREFIX/lib"
    make -j$(nproc)
}
